---
title: "Presentatie bedrijfsopvolgers"
author: "Albart Coster"
date: "10-14-2025"
format: 
 revealjs:
    scrollable: true
editor: visual
lang: nl
output-dir: docs
filters:
  - shinylive
---

## Voorstellen

## Inhoud

3 Onderwerpen:

-   Productie
-   Winst
-   Milieudoelen

## Productie

Productie belangrijk voor (voer)winst. Voerwinst (IOFC) is melkprijs * melkproductie - totale voerkosten







(resultaten uit voerkosten)

Wat hebben we nodig voor hoge productie:

-   Goede opstart, daardoor hoge piekproductie
-   Gezonde koeien (uiergezondheid, wellicht klauwgezondheid)
-   Koe beschikt over veel glucose (vrij technisch)
-   Resultaten Alex BAch

## Winst

Omzet is niet direct winst. Daarom IOFC.

(beeld uit voerkosten.nl)

-   Wat helpt voor lage voerkosten: weinig toevoegingen
-   Veel en goed ruwvoer
-   Weinig verlies in de kuil en restvoer niet verloren (conserveirng kuil, uitkuilen, ..)
-   Efficiëntie koeien (lage DIL, voerefficiëntie)
-   Efficiëntie omzetting (geen stress, hoge opname, weingi verliezen ook bij koeien)
-   Lage kosten in andere sectoren (jongveeopfok, droogstand)

## Milieudoelen

-   Ruwvoer telen met weinig N
-   Veel ruwvoer van land halen
-   Weidegang
-   Benutting najaarsgras
-   Kuilen met veel DVE, weinig OEB

## App

```{shinylive-r}
#| standalone: true
#| viewerHeight: 600
library(shiny)
library(bslib)

# Define UI for app that draws a histogram ----
ui <- page_sidebar(
  sidebar = sidebar(open = "open",
    numericInput("n", "Sample count", 100),
    checkboxInput("pause", "Pause", FALSE),
  ),
  plotOutput("plot", width=500)
)

server <- function(input, output, session) {
  data <- reactive({
    input$resample
    if (!isTRUE(input$pause)) {
      invalidateLater(1000)
    }
    rnorm(input$n)
  })
  
  output$plot <- renderPlot({
    hist(data(),
      breaks = 40,
      xlim = c(-2, 2),
      ylim = c(0, 1),
      lty = "blank",
      xlab = "value",
      freq = FALSE,
      main = ""
    )
    
    x <- seq(from = -2, to = 2, length.out = 500)
    y <- dnorm(x)
    lines(x, y, lwd=1.5)
    
    lwd <- 5
    abline(v=0, col="red", lwd=lwd, lty=2)
    abline(v=mean(data()), col="blue", lwd=lwd, lty=1)

    legend(legend = c("Normal", "Mean", "Sample mean"),
      col = c("black", "red", "blue"),
      lty = c(1, 2, 1),
      lwd = c(1, lwd, lwd),
      x = 1,
      y = 0.9
    )
  }, res=140)
}

# Create Shiny app ----
shinyApp(ui = ui, server = server)
```

